{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\project_TCC\\\\src\\\\previsoes_grafico.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst Previsoes = () => {\n  const [cidades, setCidade] = useState([]); // const [loading, setLoading] = useState(false);\n\n  const getListadata = async () => {\n    try {\n      const data = await axios.get(\"http://localhost:5000/previsoes_covid/\");\n      console.log(data);\n      setCidade(data.data); // setLoading(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const columns = [\"cidade\", \"data\", \"casos\", \"mortes\"];\n  useEffect(() => {\n    getListadata();\n  }, []);\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 800,\n    height: 600,\n    data: cidades // columns={columns}\n    ,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Previs\\xE3o dos casos\",\n    type: \"monotone\",\n    dataKey: \"casos\",\n    stroke: \"#4B0082\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Previs\\xE3o das mortes\",\n    type: \"monotone\",\n    dataKey: \"mortes\",\n    stroke: \"#FF0000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default Previsoes;","map":{"version":3,"sources":["C:/Users/patri/Desktop/project_TCC/src/previsoes_grafico.js"],"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Previsoes","cidades","setCidade","getListadata","data","get","console","log","e","columns","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;;AAWA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBZ,QAAQ,CAAC,EAAD,CAArC,CADoB,CAEpB;;AAEA,QAAMa,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACf,wCADe,CAAnB;AAGIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,MAAAA,SAAS,CAACE,IAAI,CAACA,IAAN,CAAT,CALJ,CAMI;AAEP,KARD,CAQE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ,GAZD;;AAcJ,QAAMC,OAAO,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,CAAhB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAKI,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEF,OAHR,CAIE;AAJF;AAKE,IAAA,MAAM,EAAE;AAACS,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,EAAhB;AAAoBC,MAAAA,IAAI,EAAE,EAA1B;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA6BN,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BM,eA8BN,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BM,eA+BN,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BM,eAgCN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCM,eAiCN,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAC,KAAtB;AAA4B,IAAA,MAAM,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCM,eAkCN,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,uBAAX;AAAgC,IAAA,IAAI,EAAC,UAArC;AAAgD,IAAA,OAAO,EAAC,OAAxD;AAAgE,IAAA,MAAM,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCM,eAmCN,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,wBAAX;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,OAAO,EAAC,QAAzD;AAAkE,IAAA,MAAM,EAAC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCM,CADF;AAwCH,CAjED;;AAmEA,eAAeb,SAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from 'recharts';\r\n\r\n\r\nconst Previsoes = () => {\r\n    const [cidades, setCidade] = useState([]);\r\n    // const [loading, setLoading] = useState(false);\r\n  \r\n    const getListadata = async () => {\r\n        try {\r\n            const data = await axios.get(\r\n                \"http://localhost:5000/previsoes_covid/\"\r\n                );\r\n                console.log(data);\r\n                setCidade(data.data);\r\n                // setLoading(true);\r\n  \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nconst columns = [\"cidade\", \"data\", \"casos\", \"mortes\"];\r\n\r\nuseEffect(() => {\r\n    getListadata();\r\n}, []);\r\n\r\n\r\n    return (\r\n      <LineChart\r\n        width={800}\r\n        height={600}\r\n        data={cidades}\r\n        // columns={columns}\r\n        margin={{top: 5, right: 30, left: 20, bottom: 5}}\r\n        >\r\n            {/* <Line  type=\"\" dataKey=\"Previsões\" stroke=\"#4B0082\" />\r\n        <Line\r\n          type=''\r\n          dataKey='casos'\r\n          stroke='#4B0082'\r\n          activeDot={{r: 8}}\r\n          />\r\n          <Line\r\n          type=''\r\n          dataKey='mortes'\r\n          stroke='#FF0000'\r\n          activeDot={{r: 8}}\r\n          />\r\n        <CartesianGrid strokeDasharray='4 4'/>\r\n        <Tooltip/>\r\n        <YAxis/>\r\n        <XAxis dataKey='data'/>\r\n        <Line  type=\"\" dataKey=\"cidade\" stroke=\"#4B0082\" />\r\n        <Legend />\r\n      </LineChart> */}\r\n\r\n\r\n<XAxis dataKey=\"name\" />\r\n<YAxis />\r\n<CartesianGrid strokeDasharray=\"3 3\" />\r\n<Tooltip />\r\n<Legend verticalAlign=\"top\" height={36}/>\r\n<Line name=\"Previsão dos casos\" type=\"monotone\" dataKey=\"casos\" stroke=\"#4B0082\" />\r\n<Line name=\"Previsão das mortes\" type=\"monotone\" dataKey=\"mortes\" stroke=\"#FF0000\" />\r\n</LineChart>\r\n    );\r\n  \r\n}\r\n\r\nexport default Previsoes;"]},"metadata":{},"sourceType":"module"}