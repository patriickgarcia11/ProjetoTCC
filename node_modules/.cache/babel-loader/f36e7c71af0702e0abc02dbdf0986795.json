{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\project_TCC\\\\src\\\\grafico.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar, AreaChart, Area } from 'recharts';\n\nconst ListaDiaria = () => {\n  const [cidades, setCidade] = useState([]); // const [loading, setLoading] = useState(false);\n\n  const getListadata = async () => {\n    try {\n      const data = await axios.get(\"http://localhost:5000/lista_diaria/\");\n      console.log(data);\n      setCidade(data.data); // setLoading(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const columns = [\"cidade\", \"data\", \"casos\", \"mortes\"];\n  useEffect(() => {\n    getListadata();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <LineChart\n    //   width={800}\n    //   height={600}\n    //   data={cidades}\n    //   columns={columns}\n    //   margin={{top: 5, right: 30, left: 20, bottom: 5}}\n    //   >\n    //   <Line\n    //     type='cidade'\n    //     dataKey='casos'\n    //     stroke='#FF8C00'\n    //     activeDot={{r: 8}}\n    //     />\n    //   <CartesianGrid strokeDasharray='4 4'/>\n    //   <Tooltip/>\n    //   <YAxis/>\n    //   <XAxis dataKey='data'/>\n    //   <Line  type=\"monotone\" dataKey=\"cidade\" stroke=\"#FF8C00\" />\n    //   <Legend />\n    // </LineChart>\n    React.createElement(AreaChart, {\n      width: 800,\n      height: 600,\n      data: cidades,\n      columns: columns,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorUv\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0.8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"95%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorPv\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#82ca9d\",\n      stopOpacity: 0.8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"95%\",\n      stopColor: \"#82ca9d\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"Casos\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorUv)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"mortes\",\n      stroke: \"#82ca9d\",\n      fillOpacity: 1,\n      fill: \"url(#colorPv)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nexport default ListaDiaria;","map":{"version":3,"sources":["C:/Users/patri/Desktop/project_TCC/src/grafico.js"],"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarChart","Bar","AreaChart","Area","ListaDiaria","cidades","setCidade","getListadata","data","get","console","log","e","columns","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  BarChart,\r\n  Bar,\r\n  AreaChart,\r\n  Area\r\n} from 'recharts';\r\n\r\n\r\nconst ListaDiaria = () => {\r\n    const [cidades, setCidade] = useState([]);\r\n    // const [loading, setLoading] = useState(false);\r\n  \r\n    const getListadata = async () => {\r\n        try {\r\n            const data = await axios.get(\r\n                \"http://localhost:5000/lista_diaria/\"\r\n                );\r\n                console.log(data);\r\n                setCidade(data.data);\r\n                // setLoading(true);\r\n  \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nconst columns = [\"cidade\", \"data\", \"casos\", \"mortes\"];\r\n\r\nuseEffect(() => {\r\n    getListadata();\r\n}, []);\r\n\r\n\r\n    return (\r\n      // <LineChart\r\n      //   width={800}\r\n      //   height={600}\r\n      //   data={cidades}\r\n      //   columns={columns}\r\n      //   margin={{top: 5, right: 30, left: 20, bottom: 5}}\r\n      //   >\r\n      //   <Line\r\n      //     type='cidade'\r\n      //     dataKey='casos'\r\n      //     stroke='#FF8C00'\r\n      //     activeDot={{r: 8}}\r\n      //     />\r\n      //   <CartesianGrid strokeDasharray='4 4'/>\r\n      //   <Tooltip/>\r\n      //   <YAxis/>\r\n      //   <XAxis dataKey='data'/>\r\n      //   <Line  type=\"monotone\" dataKey=\"cidade\" stroke=\"#FF8C00\" />\r\n      //   <Legend />\r\n      // </LineChart>\r\n\r\n      <AreaChart width={800} height={600} data={cidades} columns={columns}\r\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n      <defs>\r\n        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n          <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n          <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n        </linearGradient>\r\n        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n          <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\r\n          <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\r\n        </linearGradient>\r\n      </defs>\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <Tooltip />\r\n      <Area type=\"monotone\" dataKey=\"Casos\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\r\n      <Area type=\"monotone\" dataKey=\"mortes\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\r\n    </AreaChart>\r\n    );\r\n  \r\n}\r\n\r\nexport default ListaDiaria;"]},"metadata":{},"sourceType":"module"}