{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\ProjetoTCC\\\\src\\\\previsoes_grafico.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Line, XAxis, YAxis, Legend, Tooltip, LineChart, CartesianGrid } from 'recharts';\nexport default class Previsoes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cidades: [],\n      colunas: [\"cidade\", \"data\", \"casos\", \"mortes\"]\n    };\n\n    this.filter = (data, column, value) => {\n      const cidades = [];\n      Object.keys(data).forEach(key => {\n        if (data[key][column] === value) {\n          cidades.push(data[key]);\n        }\n      });\n      return cidades;\n    };\n\n    this.refresh = () => {\n      axios.get(\"http://localhost:5000/previsoes_covid/\").then(res => {\n        let data = res.data;\n        this.setState({\n          cidades: data\n        });\n      }).catch(err => console.error(err));\n    };\n\n    this.refresh();\n  }\n\n  render() {\n    const {\n      cidades,\n      colunas\n    } = this.state;\n    return /*#__PURE__*/React.createElement(LineChart, {\n      width: 800,\n      height: 600,\n      data: cidades,\n      columns: colunas,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      name: \"Previs\\xE3o de casos\",\n      type: \"\",\n      dataKey: \"casos\",\n      stroke: \"#4B0082\",\n      activeDot: {\n        r: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Previs\\xE3o de mortes\",\n      type: \"\",\n      dataKey: \"mortes\",\n      stroke: \"#FF0000\",\n      activeDot: {\n        r: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"4 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"\",\n      dataKey: \"cidade\",\n      stroke: \"#4B0082\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/patri/Desktop/ProjetoTCC/src/previsoes_grafico.js"],"names":["React","useState","useEffect","axios","Line","XAxis","YAxis","Legend","Tooltip","LineChart","CartesianGrid","Previsoes","Component","constructor","props","state","cidades","colunas","filter","data","column","value","Object","keys","forEach","key","push","refresh","get","then","res","setState","catch","err","console","error","render","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nimport { Line, XAxis, YAxis, Legend, Tooltip, LineChart, CartesianGrid } from 'recharts';\r\nexport default class Previsoes extends React.Component {\r\n\r\n  state = {\r\n    cidades: [],\r\n    colunas: [\"cidade\", \"data\", \"casos\", \"mortes\"],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.refresh();\r\n  }\r\n\r\n  filter = (data, column, value) => {\r\n    const cidades = [];\r\n\r\n    Object.keys(data).forEach(key => {\r\n      if (data[key][column] === value) {\r\n        cidades.push(data[key]);\r\n      }\r\n    });\r\n\r\n    return cidades;\r\n  };\r\n\r\n  refresh = () => {\r\n\r\n    axios.get(\"http://localhost:5000/previsoes_covid/\")\r\n      .then(res => {\r\n        let data = res.data;\r\n\r\n        this.setState({ cidades: data });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\nrender () {\r\n  const { cidades, colunas } = this.state;\r\n    return (\r\n      <LineChart\r\n        width={800}\r\n        height={600}\r\n        data={cidades}\r\n        columns={colunas}\r\n        margin={{top: 5, right: 30, left: 20, bottom: 5}}\r\n        >\r\n        <Line\r\n        name='Previsão de casos'\r\n          type=''\r\n          dataKey='casos'\r\n          stroke='#4B0082'\r\n          activeDot={{r: 8}}\r\n          />\r\n          <Line\r\n          name='Previsão de mortes'\r\n          type=''\r\n          dataKey='mortes'\r\n          stroke='#FF0000'\r\n          activeDot={{r: 8}}\r\n          />\r\n        <CartesianGrid strokeDasharray='4 4'/>\r\n        <Tooltip/>\r\n        <YAxis/>\r\n        <XAxis dataKey='data'/>\r\n        <Line  type=\"\" dataKey=\"cidade\" stroke=\"#4B0082\" />\r\n        <Legend />\r\n      </LineChart>\r\n    );\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}