{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\project_TCC\\\\src\\\\grafico.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Line, XAxis, YAxis, Legend, Tooltip, LineChart, CartesianGrid } from 'recharts';\nexport default class ListaDiaria extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cidades: [],\n      colunas: [\"cidade\", \"data\", \"casos\", \"mortes\"]\n    };\n\n    this.filter = (data, column, value) => {\n      const cidades = [];\n      Object.keys(data).forEach(key => {\n        if (data[key][column] === value) {\n          cidades.push(data[key]);\n        }\n      });\n      return cidades;\n    };\n\n    this.refresh = () => {\n      axios.get(\"http://localhost:5000/lista_diaria/\").then(res => {\n        let data = res.data;\n        this.setState({\n          cidades: data\n        });\n      }).catch(err => console.error(err));\n    };\n\n    this.refresh();\n  }\n\n  render() {\n    const {\n      cidades,\n      colunas\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MUIDataTable, {\n      keyField: \"cidade\",\n      data: cidades,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      type: \"cidade\",\n      dataKey: \"casos\",\n      stroke: \"#FF8C00\",\n      activeDot: {\n        r: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"4 4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Cidade\",\n      type: \"monotone\",\n      dataKey: \"cidade\",\n      stroke: \"#FF8C00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/patri/Desktop/project_TCC/src/grafico.js"],"names":["React","axios","MUIDataTable","Line","XAxis","YAxis","Legend","Tooltip","LineChart","CartesianGrid","ListaDiaria","Component","constructor","props","state","cidades","colunas","filter","data","column","value","Object","keys","forEach","key","push","refresh","get","then","res","setState","catch","err","console","error","render","columns","r"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,SAA9C,EAAyDC,aAAzD,QAA8E,UAA9E;AACA,eAAe,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAOvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SALnBC,KAKmB,GALX;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B;AAFH,KAKW;;AAAA,SAMnBC,MANmB,GAMV,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAChC,YAAML,OAAO,GAAG,EAAhB;AAEAM,MAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0BC,GAAG,IAAI;AAC/B,YAAIN,IAAI,CAACM,GAAD,CAAJ,CAAUL,MAAV,MAAsBC,KAA1B,EAAiC;AAC/BL,UAAAA,OAAO,CAACU,IAAR,CAAaP,IAAI,CAACM,GAAD,CAAjB;AACD;AACF,OAJD;AAMA,aAAOT,OAAP;AACD,KAhBkB;;AAAA,SAkBnBW,OAlBmB,GAkBT,MAAM;AAEdzB,MAAAA,KAAK,CAAC0B,GAAN,CAAU,qCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAIX,IAAI,GAAGW,GAAG,CAACX,IAAf;AAEA,aAAKY,QAAL,CAAc;AAAEf,UAAAA,OAAO,EAAEG;AAAX,SAAd;AACD,OALH,EAMGa,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CANhB;AAOD,KA3BkB;;AAGjB,SAAKN,OAAL;AACD;;AAyBDS,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEpB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AAEA,wBAIE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,QADX;AAEE,MAAA,IAAI,EAAEC,OAFR;AAGE,MAAA,OAAO,EAAEqB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,SAAS,EAAE;AAACC,QAAAA,CAAC,EAAE;AAAJ,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAWE,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAcE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAeE,oBAAC,IAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAoB,MAAA,IAAI,EAAC,UAAzB;AAAoC,MAAA,OAAO,EAAC,QAA5C;AAAqD,MAAA,MAAM,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAJF;AAwBD;;AAhEsD","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from \"axios\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport { Line, XAxis, YAxis, Legend, Tooltip, LineChart, CartesianGrid } from 'recharts';\r\nexport default class ListaDiaria extends React.Component {\r\n\r\n  state = {\r\n    cidades: [],\r\n    colunas: [\"cidade\", \"data\", \"casos\", \"mortes\"],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.refresh();\r\n  }\r\n\r\n  filter = (data, column, value) => {\r\n    const cidades = [];\r\n\r\n    Object.keys(data).forEach(key => {\r\n      if (data[key][column] === value) {\r\n        cidades.push(data[key]);\r\n      }\r\n    });\r\n\r\n    return cidades;\r\n  };\r\n\r\n  refresh = () => {\r\n\r\n    axios.get(\"http://localhost:5000/lista_diaria/\")\r\n      .then(res => {\r\n        let data = res.data;\r\n\r\n        this.setState({ cidades: data });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  render() {\r\n\r\n    const { cidades, colunas } = this.state;\r\n\r\n    return (\r\n      \r\n\r\n\r\n      <MUIDataTable \r\n        keyField=\"cidade\"\r\n        data={cidades} \r\n        columns={columns} \r\n        >\r\n        <Line\r\n          type='cidade'\r\n          dataKey='casos'\r\n          stroke='#FF8C00'\r\n          activeDot={{r: 8}}\r\n          />\r\n        <CartesianGrid strokeDasharray='4 4'/>\r\n        <Tooltip/>\r\n        <YAxis/>\r\n        <XAxis dataKey='data'/>\r\n        <Line  name=\"Cidade\"type=\"monotone\" dataKey=\"cidade\" stroke=\"#FF8C00\" />\r\n        <Legend />\r\n      </MUIDataTable>\r\n      \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}